// =====================================================
// grid布局,只指定父元素样式 grids-n(1~12),项目自动均分n/12
// =====================================================
for i in range(1, 12)
    .grids-{i}
        display: grid
        grid-template-columns: repeat(i, percentage((1 / i)))
        overflow: hidden
// 根据屏幕尺寸,采取不同的均分比例.
grids_n(screen-type)
    for i in range(1, 12)
        .grids-{screen-type}-{i}
            grid-template-columns: repeat(i, percentage((1 / i)))
// 使用min-width(大于xx像素)媒体查询时,一定要从小到大的屏幕大小顺序定义样式,否则小屏幕的样式会覆盖大的
// > 640
@media only screen and (min-width: $screen-phone)
    grids_n(sm)
// 小平板 > 768
@media only screen and (min-width: $screen-tablet)
    grids_n(md)
// 大平板 > 992
@media only screen and (min-width: $screen-bigtablet)
    grids_n(lg)
// pc > 1200
@media only screen and (min-width: $screen-pc)
    grids_n(xl)

// =====================================================
// flex布局,册格工具样式定义,其内项目决定册格占比
// =====================================================
.grids
    display: flex
    flex-wrap: wrap // 规定项目超过一行时,可以换到下一行
// 均分的册格 n个册格,宽度为1/n
.grid
    flex: 1 1 auto
    overflow: hidden
// 12列册格(mixinx) 默认用于手机,移动优先
for i in range(1, 12)
    .grid-{i}
        flex: 0 1 percentage((i / 12))
        overflow: hidden
// 根据屏幕尺寸,采取不同的均分比例. grid-n 表示占据n/12的宽度
grid_n(screen-type)
    for i in range(1, 12)
        .grid-{screen-type}-{i}
            flex: 0 1 percentage((i / 12))
// > 640
@media only screen and (min-width: $screen-phone)
    grid_n(sm)
// 小平板 > 768
@media only screen and (min-width: $screen-tablet)
    grid_n(md)
// 大平板   > 992
@media only screen and (min-width: $screen-bigtablet)
    grid_n(lg)
// pc > 1200
@media only screen and (min-width: $screen-pc)
    grid_n(xl)