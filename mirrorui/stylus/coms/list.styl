// ==列表 ul ol==//
{$selector-list}
    // 主题色变量
    --t-list-style-color:$gray['8']// ul无序列表风格颜色
    //
    list-style: none
    & li
        padding-left: .5em // .5em 符号/编号与内容的距离
    // 嵌套的列表缩进
    & .list li
        margin-left:1.8em

// 图案风格 方块,圆,等边三角 使用>直接子元素选择器,避免影响嵌套的list
{$selector-list}
    &.disc > li::marker,&.cir > li::marker,&.square > li::marker,&.triangle > li::marker,&.star > li::marker
        color: var(--t-list-style-color)
        font-size:1.2em
    // 实心圆(默认)
    &.disc > li::marker
        content: '●';
    // 空心圆
    &.cir > li::marker
        content: '○'
    // 方块
    &.square > li::marker
        content: '■';
    // 正三角形
    &.triangle > li::marker
        content: '▲';
    // 五角星
    &.star > li::marker
        content: '★';

// 数值列样式,abc列样式
{$selector-list}
    // 计算嵌套,只能使用一种风格,嵌套的list不用再添加风格样式
    &.nums,&.abcs,&.zhs,&.abc-ls, &.nums .list,&.abcs .list,&.zhs .list,&.abc-ls .list
        counter-reset: li-item
    &.nums li,&.abcs li,&.zhs li,&.abc-ls li
        counter-increment: li-item
    &.nums li::marker
        content: counters(li-item,'.') '.'
    &.abcs li::marker
        content: counters(li-item,'.',upper-latin) '.'
    &.abc-ls li::marker
        content: counters(li-item,'.',lower-latin) '.'
    &.zhs li::marker
        content: counters(li-item,'.',cjk-ideographic) '.'
    // 不计算嵌套,可以使用多种风格
    &.num,&.abc,&.zh,&.abc-l
        counter-reset: li-item
    &.num > li,&.abc > li,&.zh > li,,&.abc-l > li
        counter-increment: li-item
    &.num > li::marker
        content: counter(li-item) '.';
    &.abc > li::marker
        content: counter(li-item,upper-latin) '.'
    &.abc-l > li::marker
        content: counter(li-item,lower-latin) '.'
    &.zh > li::marker
        content: counter(li-item,cjk-ideographic) '.'

if $themeDark==1
    // dark主题
    {$themePre}-dark {$selector-list}
        --t-list-style-color:$gray['4']// 图案颜色
if $themeColor==1
    // 彩色主题
    for k,v in $colors-dict
        {$selector-list}.{k}
            --t-list-style-color:v['5']// 图案颜色