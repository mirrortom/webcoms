@*
  1.模板页名字规定: "页面名字.part.cshtml""
  2.内容容器固定如下:
<div class="doc-part-box" id="页面名字">
  <h2>标题</h2>
  ......
  ......
</div>
*@
<div class="doc-part-box" id="domstring">
  <h2>dom string</h2>
  <p>生成dom元素字符串,主要用于拼接html字符串的情况,直接拼接有点啰嗦.</p>
  <p class="article-title">$.dom</p>
  <p>$.dom是个对象,每个属性的名字是dom的名字,例如div,span,p.值是一个函数,返回这个dom的html字符串</p>
  <p>$.dom.div('innerText','class',attrjson)</p>
  <p><b class="bg-gray">innerText</b><span class="mg-l-20">string ,html标记中的文本</span></p>
  <p><b class="bg-gray">class</b><span class="mg-l-20">string ,样式字符串.如果不需要样式参数但有属性参数,可以省略.</span></p>
  <p><b class="bg-gray">attrjson</b><span class="mg-l-20">json ,属性名值对</span></p>
  <p>支持的标记有: 'div', 'span', 'a', 'p', 'table', 'tr', 'th', 'td', 'select', 'option', 'ul', 'li', 'dt', 'dd', 'h1', 'h2', 'h3', 'h4', 'h5', 'h6'</p>
  <pre class="bg-gray-lt">
    // 生成一个段落
    $.dom.p('一个段落','article-title primary',{id:'myname'});
    // &lt;p class="article-title primary" id="myname"&gt;一个段落&lt;/p&gt;

</pre>
  <p>重复生成标记,在文本前加 :for,文本用 | 竖线隔开</p>
  <pre class="bg-gray-lt">
    // 生成一个列表
    let li = $.dom.li,ul = $.dom.ul;
    ul(li('<strong>:for</strong>第一列<strong>|</strong>第二列|第三列'), 'list square', { id: 'mylist' });
    // &lt;ul class="list square" id="mylist"&gt;&lt;li&gt;第一列&lt;/li&gt;&lt;li&gt;第二列&lt;/li&gt;&lt;li&gt;第三列&lt;/li&gt;&lt;/ul&gt;

    // 省略样式参数
    ul(li('单列'),{id:'myul'});

</pre>
</div>